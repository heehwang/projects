import junit.framework.TestCase;

public class AbstractListNodeTest extends TestCase {

    
    AbstractListNode e1 = new EmptyListNode();
    AbstractListNode l3 = new NonemptyListNode(new Integer(5),e1);
    AbstractListNode l2 = new NonemptyListNode(new Integer(3),l3);
    AbstractListNode l1 = new NonemptyListNode(new Integer(1),l2);

    AbstractListNode l3 = new NonemptyListNode(new Integer(5),e);
    AbstractListNode l2 = new NonemptyListNode(new Integer(3),l3);
    AbstractListNode l1 = new NonemptyListNode(new Integer(1),l2);
    
    public void testEfirst(){
	try {
	    e1.first();
	    fail("Should not reach this code");
	}
	catch(IllegalArgumentException ex1) {
	    String m1 = ex1.getMessage();
	    assertEquals(m1, "There is no 'first' value stored in an EmptyListNode.");
	}
    }

    public void testErest(){
	try {
	    e1.rest();
	}
	catch(IllegalArgumentException ex2) {
	    String m2 = ex2.getMessage();
	     assertEquals(m2, "No elements follow an EmptyListNode.");
	 }
     }

    public void testEisEmpty(){
	 assertTrue(e.isEmpty());
     }



    public void testNfirst(){
	assertEquals(l1.first(),1);
    }
/*
    public void testNrest(){
	assertEquals(l1.rest(),null);
    }
*/
    public void testNisEmpty(){
	assertFalse(l1.isEmpty());
    }

    public void testValues(){
	assertEquals(l1.first(), 1);
	assertEquals(l2.first(), 3);
	assertEquals(l3.first(), 5);
    }

    public void testSize(){
    assertEquals(l1.size(), 3);
    }	

    public void testGet(){
    assertEquals(l1.get(1),3);
    assertEquals(l1.get(0),1);
    }
    
    public void testToString(){
    	assertEquals(l1.toString(), "( 1 3 5 )");
    }
    
    public void testEquals(){
    	assertTrue(l1)
    }
    

}
